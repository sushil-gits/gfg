ðŸ§© Problem Statement: Count and Say
The Count and Say sequence is a series of numbers where each term is generated by describing the previous term.

You start with:

1 as the first term.

Each subsequent term is generated by reading the previous term:

Count the number of digits in groups of the same digit and say it.

Examples:
1 â†’ (one 1) â†’ "11"

11 â†’ (two 1s) â†’ "21"

21 â†’ (one 2, one 1) â†’ "1211"

1211 â†’ (one 1, one 2, two 1s) â†’ "111221"

ðŸªœ Stepwise Approach
âœ… Step 1: Base Case
if(n == 1) return "1";
If n == 1, return the first element of the sequence, which is "1".

âœ… Step 2: Initialize the First Term
string temp = "1";
temp holds the current term in the sequence. Start with the first term "1".

âœ… Step 3: Loop from 2 to n
while (--n)
Run the loop n - 1 times to generate up to the nth term.

We use --n so that we skip processing when n == 1 (already returned).

âœ… Step 4: Generate the Next Term
string ans = "";
int first = 0;
ans will hold the newly formed string.

first marks the start of a sequence of same digits.

âœ… Step 5: Scan temp Character-by-Character
for (int i = 1; i <= temp.size(); i++) {
    if (i != temp.size() && temp[i] == temp[i - 1]) {
        continue;
    } else {
        char val = temp[i - 1];
        int count = i - first;
        ans.push_back(count + '0');
        ans.push_back(val);
        first = i;
    }
}
From i = 1 to i <= temp.size():

If current digit temp[i] is equal to previous temp[i-1], we continue counting.

Otherwise, a group ends. Calculate the count:

count = i - first

Get the digit: val = temp[i - 1]

Append to answer: ans += (count + '0') + val

Update first = i to mark the start of the next group.

âœ… Step 6: Update temp
temp = ans;
After generating the next term, assign it to temp for the next iteration.

âœ… Step 7: Return Result
return temp;
After generating the nth term, return the result.

âœ… Example Execution (n = 4)
Let's trace it briefly:

Iteration	temp	Result Description
1	"1"	one 1 â†’ "11"
2	"11"	two 1s â†’ "21"
3	"21"	one 2, one 1 â†’ "1211"
4	"1211"	Final result, return this

//{ Driver Code Starts
// Initial template for C++
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
    string countAndSay(int n) {
        // code here
        if(n==1)
        return "1";
        string temp="1";
        while(--n)
        
        {
            string ans="";
            int first=0;
            for(int i=1;i<=temp.size();i++)
            {
                if(i!=temp.size() && temp[i]==temp[i-1])
                {
                    continue;
                }
                else
                {
                    char val=temp[i-1];
                    int count=i-first;
                    ans.push_back(count+'0');
                    ans.push_back(val);
                    first=i;
                }
            }
            temp=ans;
        }
        return temp;
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        Solution obj;
        cout << obj.countAndSay(n) << endl;

        cout << "~"
             << "\n";
    }
    return 0;
}
// } Driver Code Ends
